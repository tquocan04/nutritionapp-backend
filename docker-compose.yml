services:
  nutritionapp:
    image: ${DOCKER_REGISTRY-}nutritionapp
    build:
      context: .
      dockerfile: nutritionapp/Dockerfile
    container_name: api_nutrition
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      DatabaseSettings__DefaultConnection: "Server=sqlnutrition;Database=nutrition;User Id=sa;Password=Nutrition@pp123;TrustServerCertificate=true"
      TZ: Asia/Ho_Chi_Minh
    ports:
      - "8000:8080"
    depends_on:
      - sqlnutrition
    restart: always

  sqlnutrition: 
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlnutrition
    environment:
      MSSQL_SA_PASSWORD: "Nutrition@pp123"
      ACCEPT_EULA: "Y"
    ports:
      - "1430:1433"
    volumes:
      - sql_nutrition:/var/opt/mssql
    restart: always

  nginxx:
    image: nginx:latest
    container_name: nginxx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/etc:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    command: nginx -g 'daemon off;'
    ports:
      - "80:80"
      - "443:443" 
    depends_on:
      - nutritionapp
    restart: always
    
  certbott:
    image: certbot/certbot
    container_name: certbott
    volumes:
      - ./certbot/etc:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on: 
      - nginxx


volumes:
  sql_nutrition:
    name: sql_nutrition